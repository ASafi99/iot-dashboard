[{"/Users/SAMEERMAC/Desktop/iot-dashboard/src/index.js":"1","/Users/SAMEERMAC/Desktop/iot-dashboard/src/App.js":"2","/Users/SAMEERMAC/Desktop/iot-dashboard/src/reportWebVitals.js":"3","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Header.js":"4","/Users/SAMEERMAC/Desktop/iot-dashboard/src/NavBar.js":"5","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Dashboard.js":"6","/Users/SAMEERMAC/Desktop/iot-dashboard/src/fire.js":"7","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Devices.js":"8","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Modal.js":"9","/Users/SAMEERMAC/Desktop/iot-dashboard/src/User.js":"10","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Login.js":"11","/Users/SAMEERMAC/Desktop/iot-dashboard/src/SimpleCard.js":"12","/Users/SAMEERMAC/Desktop/iot-dashboard/src/widgets.js":"13","/Users/SAMEERMAC/Desktop/iot-dashboard/src/ButtonLoader.js":"14","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Card.js":"15","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Users.js":"16","/Users/SAMEERMAC/Desktop/iot-dashboard/src/DeviceUsers.js":"17","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Policy.js":"18"},{"size":615,"mtime":1609269131194,"results":"19","hashOfConfig":"20"},{"size":256,"mtime":1610119246134,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1608674423807,"results":"22","hashOfConfig":"20"},{"size":2158,"mtime":1611710402899,"results":"23","hashOfConfig":"20"},{"size":3555,"mtime":1613053469979,"results":"24","hashOfConfig":"20"},{"size":5406,"mtime":1615908123915,"results":"25","hashOfConfig":"20"},{"size":1249,"mtime":1611853947778,"results":"26","hashOfConfig":"20"},{"size":4551,"mtime":1615755804891,"results":"27","hashOfConfig":"20"},{"size":25514,"mtime":1615836804817,"results":"28","hashOfConfig":"20"},{"size":2983,"mtime":1612286384756,"results":"29","hashOfConfig":"20"},{"size":2694,"mtime":1615919050558,"results":"30","hashOfConfig":"20"},{"size":3632,"mtime":1612641732181,"results":"31","hashOfConfig":"20"},{"size":6484,"mtime":1615840733211,"results":"32","hashOfConfig":"20"},{"size":805,"mtime":1611087124654,"results":"33","hashOfConfig":"20"},{"size":3745,"mtime":1613150067709,"results":"34","hashOfConfig":"20"},{"size":4653,"mtime":1615846534513,"results":"35","hashOfConfig":"20"},{"size":4398,"mtime":1615847570097,"results":"36","hashOfConfig":"20"},{"size":2345,"mtime":1615926936336,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"xpvirq",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/SAMEERMAC/Desktop/iot-dashboard/src/index.js",["80"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport User from \"./User\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <User />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["81","82"],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/App.js",[],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/reportWebVitals.js",[],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/Header.js",[],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/NavBar.js",["83","84","85"],"import { AppBar, Toolbar, makeStyles, Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link,  BrowserRouter, Route, Switch, HashRouter, NavLink } from \"react-router-dom\";\nimport {MdDashboard, MdDevicesOther, MdLocationSearching} from \"react-icons/md\";\nimport {FiUsers} from \"react-icons/fi\"\nimport Dashboard from \"./Dashboard\";\nimport Users from \"./Users\";\nimport Devices from \"./Devices.js\"\nimport {fire} from './fire';\n\n\n\nexport default function Header() {\n\n    const headersData = [\n\n        {\n            label: \"Dashboard\",\n            href:  \"/Dashboard\",\n            icon:  <MdDashboard/> ,\n          },\n        {\n          label: \"Devices\",\n          href: \"/Devices\",\n          icon: <MdDevicesOther/>,\n        },\n        {\n          label: \"Locations\",\n          href: \"/locations\",\n          icon: <MdLocationSearching/>\n        },\n       \n        {\n\n        label: \"Users\",\n          href: \"/users\",\n          icon: <FiUsers/>,\n        },\n       \n      ];\n\n    const useStyles = makeStyles(() => ({\n        header: {\n          backgroundColor: \"white\",\n          height: 50,\n         // marginLeft: 50,\n          marginRight:0,\n          marginTop:50,\n          color:\"black\",\n          boxShadow: \"0px 0px 0px 0px\",\n          borderBottom: \"2px solid #d6d6d6\",\n          position:\"fixed\",\n          zIndex:-1\n          \n        },\n        \n        menuButton: {\n          fontFamily: \"Open Sans, sans-serif\",\n          fontWeight: 700,\n          size: \"18px\",\n          paddingBottom: 10,\n          marginLeft: \"38px\",\n\n          '&:hover': {         \n            color:\"lightBlue\"\n          }\n          \n       },\n\n       toolbar: {\n        display: \"flex\",\n        \n      },\n\n      }));\n\n      const { header, menuButton,toolbar} = useStyles();\n\n      const headerButtons = () => {\n        return headersData.map(({ label, href, icon }) => {\n          return (\n            <Button\n              {...{\n                key: label,\n                color: \"inherit\",\n                to: href,\n                component: NavLink,\n                className: menuButton,\n                startIcon:icon,\n                              \n              }}\n            >\n              {label}\n            </Button>\n          );\n        });\n      };\n\n      const content = {\n        backgroundColor: \"black\",\n        padding: \"50px\", \n        color:\"blue\",\n        size:\"50px\",\n\n        '& h1':{\n          color:\"blue\"\n      }\n        \n      }\n\n      const [accountType, setAccountType] = useState (\"\")\n      const [email, setEmail] = useState (\"\")\n      useEffect(() => {   \n        \n        fire.firestore().collection(\"users\").doc(fire.auth().currentUser.uid).get().then(function(doc) {\n\n          setAccountType(doc.data().userInfo.accountType)\n          setEmail(doc.data().userInfo.email)\n      \n      })\n    })\n\n      \n  return (\n  \n    <HashRouter>\n    <div>\n    \n      <AppBar className={header}>\n          <Toolbar className={toolbar}>\n                \n                <div>{headerButtons()}</div>\n                <p style={{ position: \"absolute\", right:100, fontWeight: 700, bottom:5}}>Logged in as: {email} ({accountType})</p>\n            </Toolbar> \n                            \n        </AppBar> \n\n    <div className = {content}>\n    <Route exact path=\"/\" component={Dashboard}/>\n    <Route path=\"/Dashboard\" component={Dashboard}/> \n    <Route path=\"/devices\" component={Devices}/>     \n    <Route path=\"/users\" component={Users}/>  \n    </div>     \n    </div>\n  </HashRouter>  \n\n \n )\n}\n\n\n\n\n\n","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Dashboard.js",["86","87","88","89","90"],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/fire.js",[],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/Devices.js",["91","92","93"],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/Modal.js",["94"],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/User.js",["95","96","97"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport {fire} from \"./fire\";\nimport \"./User.css\";\nimport App from \"./App\";\n\n\nfunction User() {\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n \n\n  const clearInputs = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n          default:\n        }\n      });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n     fire\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(cred => {   \n        \n        \n        fire.firestore().collection('users').doc(cred.user.uid).set({\n\n          \n          userInfo:{\n            email: email,\n            uid: cred.user.uid,\n            accountType: \"IoT Admin\"\n          },\n\n          devices:{\n\n          },\n          \n          users:{\n\n          },\n        })     \n      })\n      .catch((err) => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n          default:\n\n        }\n\n     \n      });\n  };\n\n  function handleLogOut() {\n    console.log(\"logged out\")\n    fire.auth().signOut();\n   \n  }\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      clearInputs();\n      if (user) {\n\n        setUser(user);\n\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className=\"App\">\n        \n        {user ? (\n          <>           \n              <App handleLogOut={handleLogOut} /> \n    \n          </>\n        ) : (\n          <Login\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            handleLogin={handleLogin}\n            handleSignup={handleSignup}\n            hasAccount={hasAccount}\n            setHasAccount={setHasAccount}\n            emailError={emailError}\n            passwordError={passwordError}\n          />\n        )}\n    </div>\n  );\n}\n\nexport default User;\n","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Login.js",[],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/SimpleCard.js",["98"],"import {React, useEffect,useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport {fire} from './fire';\nimport { FaEye, FaTrashAlt} from 'react-icons/fa';\nimport firebase from 'firebase/app'\nimport {FiUsers} from \"react-icons/fi\"\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth:225,\n    marginTop: \"210px\",\n    position: \"absolute\",\n    marginLeft:\"30px\",\n    zIndex: -10,\n    maxWidth:230\n  },\n  \n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard(props) {\n  const classes = useStyles();\n\n const [created, setCreated] = useState(props.created)\n const [accountType, setAccountType] = useState (\"\")\n \n\n const{device} = props\n  \n  const sendData = (device) => {\n    props.showPage(false)\n\n    props.currentDevice(device)\n      \n}\n\nconst sendData1 = (device) => {\n  props.showPage(false)\n  props.showUserPage(true)\n\n  props.currentDevice(device)\n    \n}\n\n\n  useEffect(() => {\n  \n    let elements1 =[]\n\n    var options = {\n      weekday: \"short\",\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\"\n  };\n\n  fire.firestore().collection(\"users\").doc(fire.auth().currentUser.uid).get().then(function(doc) {\n        \n    let accountType = doc.data().userInfo.accountType;\n    let docRef\n    setAccountType(accountType)\n    if(accountType=== \"IoT Owner\" || accountType === \"IoT User\" ){\n\n      let ref = doc.data().userInfo.ref;\n       docRef = fire.firestore().collection(\"users\").doc(ref)\n    } else{\n      docRef = fire.firestore().collection(\"users\").doc(fire.auth().currentUser.uid)\n\n    }\n    \n    docRef.get().then((doc) =>{\n\n     elements1.push(doc.data().devices[device].deviceInfo.created.toDate().toLocaleDateString('en',options).toString())\n\n     setCreated(elements1)\n     \n    })\n  })\n\n},[device])\n\n  const removeField = (device) => {\n\n  var docRef = fire.firestore().collection('users').doc(fire.auth().currentUser.uid);\n\n  docRef.update({\n\n    [`devices.${device}`]: firebase.firestore.FieldValue.delete()\n});\n\n}\n\n  \n  return (\n    <Card >\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>  \n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n       <h5 style = {{ backgroundColor:\"blue\", color:\"white\", borderRadius: \"6px\"}}>  {device} </h5>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n        <h6>Created on: {created}</h6>\n        </Typography>\n      </CardContent>\n      <CardActions>\n      {accountType === \"IoT Owner\" || accountType === \"IoT User\" ? (\n        <>\n         <Button  onClick = {()=>{\n          sendData(device)\n            }}> {<FaEye/>}</Button>\n            <Button disabled >{<FiUsers/>}</Button>\n            <Button disabled >{<FaTrashAlt/>}</Button>\n            </>\n      ):(\n        <>\n        <Button  onClick = {()=>{\n         sendData(device)\n           }}> {<FaEye/>}</Button>\n           <Button onClick = {()=>{\n         sendData1(device)\n           }}>{<FiUsers/>}</Button>\n           <Button onClick = {() => {if(window.confirm('Are you sure you want to delete this device?'))removeField(device)}}>{<FaTrashAlt/>}</Button>\n           </>   \n      )}\n      </CardActions>\n    </Card>\n\n    \n  );\n}\n\n","/Users/SAMEERMAC/Desktop/iot-dashboard/src/widgets.js",["99","100","101","102","103","104"],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/ButtonLoader.js",[],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/Card.js",["105","106","107"],"import React, {useState} from 'react';\nimport {Card, Container, Row, Col} from \"react-bootstrap\";\nimport './Card.css'\nimport {ImSwitch} from \"react-icons/im\";\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nexport default function DashboardCards(props) {\n\n    const {temp, widgetName, onText, offText, type, maxValue, value, unit, values} = props\n\n    const [switchState, setSwitchState] = useState(false);\n   \n  \n\n    const options={\n\n    chart: {\n    \n      height:\"50%\",\n      backgroundColor: 'rgba(255, 255, 255, 0.0)',\n    },\n    credits: {\n        enabled: false\n    },\n    title: {\n        text: null\n    },\n    yAxis: {\n        title: {\n            text: null,\n        },\n        visible: false\n    },\n    xAxis: {\n      visible: false,\n      type: 'datetime',\n      dateTimeLabelFormats: {\n        minute: '%H:%M',\n      },\n      \n    },\n    legend: {\n        layout: 'horizontal',\n        align: 'left',\n        verticalAlign: 'top',\n    },\n    tooltip: {\n      useHTML: true\n    },\n    plotOptions: {\n        series: {\n            label: {\n                connectorAllowed: false\n            },\n            \n        }\n    },\n    series: [{\n        name: '°C',\n        data: values,\n        type: 'spline',\n        color: 'blue',\n        showInLegend: false,\n        marker: {\n          enabled: false,\n        }\n    }],\n    responsive: {\n        rules: [{\n            condition: {\n                maxWidth: 500,\n                maxHeight:50\n            },\n            chartOptions: {\n                legend: {\n                    layout: 'horizontal',\n                    align: 'center',\n                    verticalAlign: 'bottom'\n                }\n            }\n        }]\n    }\n  }\n\n    return(\n      <>\n      {type===\"Sensor\" ? (\n        <>\n        <Card>\n        <Card.Body >\n        <Card.Title> {widgetName}</Card.Title>\n        <Card.Subtitle style = {{ backgroundColor:\"blue\", color:\"white\", borderRadius: \"6px\"}}>{temp}</Card.Subtitle>\n        <br/>\n        <Card.Text> \n          \n        <div  className = \"sensorButton\">{value}{unit}</div>\n    \n        <h3>Max Value: {maxValue} </h3>\n                 \n            \n            </Card.Text> \n            \n      </Card.Body>\n\n    </Card> \n\n      </>\n      ):(\n        type===\"Chart\" ? (\n          <>\n          <Card>\n          <Card.Body  >\n          <Card.Title> {widgetName}</Card.Title>\n          <Card.Subtitle style = {{ backgroundColor:\"blue\", color:\"white\", borderRadius: \"6px\"}}>{temp}</Card.Subtitle>\n          <br/>\n    \n          <p style = {{position: \"absolute\",float:\"left\"}}>Temperature: {values.slice(-1)[0][1]}°C </p>\n            <div style = {{ width: \"100%\",\n          position: \"relative\",\n          height: \"150px\",\n          margin: \"25px auto\"}}>\n          <HighchartsReact highcharts={Highcharts} options={options} />\n            </div>     \n              \n          </Card.Body>\n          </Card>\n          \n            </>\n            ):(\n   <Card>\n  <Card.Body >\n    <Card.Title> {widgetName}</Card.Title>\n    <Card.Subtitle style = {{ backgroundColor:\"blue\", color:\"white\", borderRadius: \"6px\"}}>{temp}</Card.Subtitle>\n    <br/>\n    <Card.Text > \n    {switchState ?(\n       <>\n        <button  onClick = {() => setSwitchState (!switchState)} className = \"switchOnButton\" ><i><ImSwitch size={70}/></i></button>\n\n        <h3>State: {onText} </h3>\n        </>\n\n          ):(\n              <>\n    <button  onClick = {() => setSwitchState (!switchState)} className = \"switchOffButton\" ><i><ImSwitch size={70}/></i></button>\n\n    <h3>State: {offText} </h3>\n             </>\n        )} \n        </Card.Text> \n        \n  </Card.Body>\n  </Card> \n  \n       )) }\n       \n      \n     \n            </>\n  )\n\n}","/Users/SAMEERMAC/Desktop/iot-dashboard/src/Users.js",["108"],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/DeviceUsers.js",["109","110","111","112","113","114"],"/Users/SAMEERMAC/Desktop/iot-dashboard/src/Policy.js",[],{"ruleId":"115","severity":1,"message":"116","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":11},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"115","severity":1,"message":"123","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"115","severity":1,"message":"124","line":3,"column":17,"nodeType":"117","messageId":"118","endLine":3,"endColumn":30},{"ruleId":"115","severity":1,"message":"125","line":3,"column":39,"nodeType":"117","messageId":"118","endLine":3,"endColumn":45},{"ruleId":"115","severity":1,"message":"126","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"127","line":13,"column":12,"nodeType":"117","messageId":"118","endLine":13,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":107,"column":39,"nodeType":"130","messageId":"131","endLine":107,"endColumn":41},{"ruleId":"132","severity":1,"message":"133","line":140,"column":11,"nodeType":"134","endLine":140,"endColumn":26,"suggestions":"135"},{"ruleId":"115","severity":1,"message":"136","line":159,"column":18,"nodeType":"117","messageId":"118","endLine":159,"endColumn":30},{"ruleId":"115","severity":1,"message":"137","line":40,"column":12,"nodeType":"117","messageId":"118","endLine":40,"endColumn":16},{"ruleId":"115","severity":1,"message":"138","line":40,"column":18,"nodeType":"117","messageId":"118","endLine":40,"endColumn":25},{"ruleId":"128","severity":1,"message":"139","line":98,"column":41,"nodeType":"130","messageId":"140","endLine":98,"endColumn":43},{"ruleId":"115","severity":1,"message":"141","line":141,"column":44,"nodeType":"117","messageId":"118","endLine":141,"endColumn":47},{"ruleId":"115","severity":1,"message":"142","line":2,"column":27,"nodeType":"117","messageId":"118","endLine":2,"endColumn":33},{"ruleId":"115","severity":1,"message":"143","line":2,"column":35,"nodeType":"117","messageId":"118","endLine":2,"endColumn":40},{"ruleId":"132","severity":1,"message":"144","line":113,"column":6,"nodeType":"134","endLine":113,"endColumn":8,"suggestions":"145"},{"ruleId":"115","severity":1,"message":"146","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":14},{"ruleId":"115","severity":1,"message":"147","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":17},{"ruleId":"115","severity":1,"message":"126","line":2,"column":17,"nodeType":"117","messageId":"118","endLine":2,"endColumn":26},{"ruleId":"115","severity":1,"message":"148","line":3,"column":15,"nodeType":"117","messageId":"118","endLine":3,"endColumn":23},{"ruleId":"115","severity":1,"message":"141","line":29,"column":12,"nodeType":"117","messageId":"118","endLine":29,"endColumn":15},{"ruleId":"115","severity":1,"message":"149","line":29,"column":17,"nodeType":"117","messageId":"118","endLine":29,"endColumn":23},{"ruleId":"132","severity":1,"message":"150","line":128,"column":7,"nodeType":"134","endLine":128,"endColumn":9,"suggestions":"151"},{"ruleId":"115","severity":1,"message":"152","line":2,"column":15,"nodeType":"117","messageId":"118","endLine":2,"endColumn":24},{"ruleId":"115","severity":1,"message":"153","line":2,"column":26,"nodeType":"117","messageId":"118","endLine":2,"endColumn":29},{"ruleId":"115","severity":1,"message":"154","line":2,"column":31,"nodeType":"117","messageId":"118","endLine":2,"endColumn":34},{"ruleId":"115","severity":1,"message":"126","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"126","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"155","line":3,"column":18,"nodeType":"117","messageId":"118","endLine":3,"endColumn":32},{"ruleId":"115","severity":1,"message":"156","line":3,"column":34,"nodeType":"117","messageId":"118","endLine":3,"endColumn":41},{"ruleId":"115","severity":1,"message":"148","line":4,"column":15,"nodeType":"117","messageId":"118","endLine":4,"endColumn":23},{"ruleId":"115","severity":1,"message":"157","line":17,"column":12,"nodeType":"117","messageId":"118","endLine":17,"endColumn":23},{"ruleId":"132","severity":1,"message":"150","line":101,"column":10,"nodeType":"134","endLine":101,"endColumn":12,"suggestions":"158"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'Link' is defined but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'Component' is defined but never used.","'time' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateMockSeries'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'randomNumber' is defined but never used.","'test' is assigned a value but never used.","'setTest' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'obj' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.",["162"],"'zIndex' is defined but never used.","'userEvent' is defined but never used.","'otherApp' is defined but never used.","'setObj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentDevice'. Either include it or remove the dependency array.",["163"],"'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'accountType' is assigned a value but never used.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},"Update the dependencies array to be: [generateMockSeries, values.length]",{"range":"172","text":"173"},"Update the dependencies array to be: [authListener]",{"range":"174","text":"175"},"Update the dependencies array to be: [currentDevice]",{"range":"176","text":"177"},{"range":"178","text":"177"},[3192,3207],"[generateMockSeries, values.length]",[2362,2364],"[authListener]",[3013,3015],"[currentDevice]",[2571,2573]]